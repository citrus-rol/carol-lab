---
import Navbar from '../components/Navbar.astro';
import BaseLayout from '../layouts/BaseLayout.astro';
import ServiceCategory from '../components/ServiceCategory.astro';
import BackToTop from '../components/BackToTop.astro';
import Footer from '../components/Footer.astro';

const base = import.meta.env.BASE_URL || '/';
---

<BaseLayout title="Carol Lab" mainClass="home-main">
  <Navbar slot="navbar" />

  <main>
    <!-- About 區塊 -->
    <section class="about-title-section">
      <h2>關於Carol Lab</h2>
    </section>

    <!-- 桌機版 About -->
    <div class="about-desktop">
      <p>｜ 個人設計實驗室，專注於字體設計、品牌視覺以及小動畫創作。｜</p>
      <p>｜ 將創意轉化為可視化的作品，探索簡約且帶有溫度的設計表現。｜</p>
    </div>

    <!-- 手機版 About -->
    <div class="about-mobile">
      <p>｜ 個人設計實驗室｜</p>
      <p>｜ 專注於字體設計、品牌視覺以及小動畫創作｜</p>
      <p>｜ 將創意轉化為可視化的作品｜</p>
      <p>｜ 探索簡約且帶有溫度的設計表現｜</p>
    </div>

    <div class="divider-line"></div>

    <!-- Service 區塊 -->
    <section class="service-title-section">
      <h2>服務內容</h2>
    </section>
    <ServiceCategory />

    <div class="divider-line"></div>

    <!-- Works & Contact Grid 區塊 -->
    <section class="else-title-section">
      <h2>ELSE</h2>
    </section>
    <section class="grid-section">
      <a href={`${base}works/`} class="grid-card">
        <h2>作品展示</h2>
        <p>--- 點擊此處 ---</p>
      </a>
      <a href={`${base}contact/`} class="grid-card">
        <h2>聯絡資訊</h2>
        <p>--- 點擊此處 ---</p>
      </a>
    </section>

    <BackToTop />
  </main>

  <Footer slot="footer" />
</BaseLayout>

<style>
/* main-home 保留原本排版 */
main.home-main {
  max-width: 100%; 
  margin: 0 auto; 
  font-family: "Noto Sans TC","Noto Sans","Microsoft JhengHei","PingFang TC","Heiti TC",Arial,sans-serif;
}

/* About 區塊 */
.about-title-section { 
  text-align:center; 
  margin:40px auto; 
}
.about-title-section h2 { 
  letter-spacing:0.1rem;
  text-align:left; 
  color:#243640; 
  font-size: var(--font-xl);
  margin-bottom:20px; 
}

/* 桌機版 About */
.about-desktop p{
  font-size: var(--font-md);
  letter-spacing: 0.2rem;
  text-align: right;
  opacity: 0;
  transform: translateY(60px);
  background: linear-gradient(to right, #d3d7d9 0%, #d3d7d9 50%, #24364080 60%, #E5AF3A 70%);
  background-size: 200% 100%;
  background-position: 100% 0;
  -webkit-background-clip: text;
  -webkit-text-fill-color: transparent;
  display: block;
  margin: 1rem 0;
}

.about-desktop p:nth-of-type(1) { animation: fadeInMove 3s forwards 0.5s, sweep 5s forwards 8s; }
.about-desktop p:nth-of-type(2) { animation: fadeInMove 3s forwards 3.5s, sweep 5s forwards 8s; }

/* Service 區塊 */
.service-title-section { 
  margin: 40px auto; 
}
.service-title-section h2 { 
  color:#243640; 
  font-size: var(--font-xl);
  text-align:left; 
  letter-spacing:0.1rem; 
  margin-bottom:20px; 
}

/* 分隔線 */
.divider-line { 
  height:2px; 
  margin:80px auto; 
  background: linear-gradient(to right,#505e6633,#e5af3a33,#e5af3a33,#505e6633); 
}

/* ELSE 區塊 */
.else-title-section { 
  text-align:center; 
  margin:40px auto; 
}
.else-title-section h2 { 
  letter-spacing:0.1rem;
  text-align:left; 
  color:#243640; 
  font-size: var(--font-xl);
  margin-bottom:20px; 
}

.grid-section { 
  margin:12px auto 80px; 
  display:grid; 
  grid-template-columns:repeat(auto-fit, minmax(200px,1fr)); 
  gap:24px; 
}
.grid-card { 
  width:100%; 
  background: linear-gradient(to left,#24364080,#d3d7d980,#24364080); 
  box-shadow:0 0 16px 4px #243640; 
  border-radius:12px; 
  padding: 16px 12px;   /* ← 內距縮小 */
  text-align:center; 
  cursor:pointer; 
  text-decoration:none; 
  color:inherit; 
  opacity:0; 
  transform:translateY(40px); transition:all 0.8s ease; 
}
.grid-card.visible { opacity:1; 
  transform:translateY(0); 
}
.grid-card:hover { transform:scale(1.05); 
  background-color:#505e66; 
  box-shadow: inset 0 0 24px 12px #d3d7d980; 
}
.grid-card h2 { 
  font-size: var(--font-md); 
  letter-spacing:0.05rem; 
  color:#243640; 
  line-height: 1.3;   /* ← 行距收窄 */
  margin: 0 0 6px 0;  /* ← 和描述距離縮小 */
}
.grid-card p { 
  font-size: var(--font-sm); 
  letter-spacing:0.05rem; 
  color:#243640; 
  line-height: 1.4;   /* ← 收緊 */
  margin: 0; 
}

/* 共用動畫 */
@keyframes fadeInMove { to { opacity:1; transform: translateY(0); } }
@keyframes sweep { to { background-position: 0% 0; } }

/* 手機響應式 */
@media(max-width:480px){
  main.home-main { 
    padding:0 12px; 
    flex:unset; 
    height:auto; 
    overflow-y:auto; 
    -webkit-overflow-scrolling:touch; 
  }
  main::-webkit-scrollbar{ display:none; }

  .about-section,.service-title-section,.else-title-section{ 
    margin:0; 
    padding:0; 
  }

  .grid-section{ 
    padding:0; 
  }

  /* 手機版 About 區塊動畫 */
  .about-desktop p{ display: none; }
  
  .about-mobile p {
    display: block; 
    margin: 0.5rem 0;
    font-size: clamp(0.8rem, 4vw, var(--font-sm));
    letter-spacing: 0.1rem;
    opacity: 0;
    transform: translateY(60px);
    white-space: nowrap;
    overflow: visible;
    text-overflow: clip;

    background: linear-gradient(
      to right, 
      #d3d7d9 0%, 
      #d3d7d9 40%, 
      #24364080 50%, 
      #E5AF3A 60%
    );
    background-size: 300% 100%;
    background-position: 100% 0;
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
  }
  
  .about-mobile p:nth-of-type(1) { animation: fadeInMove 2s forwards 0.3s, sweep 3s forwards 11s;}
  .about-mobile p:nth-of-type(2) { animation: fadeInMove 3s forwards 2.3s, sweep 3s forwards 11s;}
  .about-mobile p:nth-of-type(3) { animation: fadeInMove 2s forwards 5.8s, sweep 3s forwards 11s;}
  .about-mobile p:nth-of-type(4) { animation: fadeInMove 2s forwards 7.8s, sweep 3s forwards 11s;}

  @keyframes fadeInMove { to { opacity:1; transform: translateY(0); } }
  @keyframes sweep { to { background-position: 0% 0; } }

  .grid-card h2 { padding: 16px 12px; }
  
}
</style>

<script>
document.addEventListener("DOMContentLoaded", () => {
  const cards = document.querySelectorAll(".grid-card");
  const observer = new IntersectionObserver(
    (entries) => {
      entries.forEach((entry) => {
        if(entry.isIntersecting) entry.target.classList.add("visible");
        else entry.target.classList.remove("visible");
      });
    }, { threshold: 0.3 }
  );
  cards.forEach(card => observer.observe(card));
});
</script>
