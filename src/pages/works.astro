---
import Navbar from '../components/Navbar.astro';
import WorksCard from '../components/WorksCard.astro';
import BaseLayout from '../layouts/BaseLayout.astro';
import BackToTop from '../components/BackToTop.astro';
import Footer from '../components/Footer.astro';

const base = import.meta.env.BASE_URL || '/';

interface Work {
  title: string;
  date: string;
  image: string;
  link: string;
}

const worksList: Work[] = [
  { title: '字體設計｜主題設計', date: '2025-01-29', image: 'images/works_01_a.svg', link: '01_typography_theme' },
  { title: '字體設計｜主題設計', date: '2025-02-05', image: 'images/works_02_a.svg', link: '02_typography_theme' },
  { title: '字體設計｜主題設計', date: '2025-02-13', image: 'images/works_03_a.svg', link: '03_typography_theme' },
  { title: '字體設計｜主題設計', date: '2025-02-19', image: 'images/works_04_a.svg', link: '04_typography_theme' },
  { title: '字體設計｜主題設計', date: '2025-02-26', image: 'images/works_05_a.svg', link: '05_typography_theme' },
  { title: '字體設計｜主題設計', date: '2025-03-25', image: 'images/works_06_a.svg', link: '06_typography_theme' },
  { title: '字體設計｜音樂視覺', date: '2025-03-12', image: 'images/works_07_a.svg', link: '01_typography_music_visual' },
  { title: '字體設計｜音樂視覺', date: '2025-03-20', image: 'images/works_08_a.svg', link: '02_typography_music_visual' },
  { title: '字體設計｜音樂視覺', date: '2025-03-26', image: 'images/works_09_a.svg', link: '03_typography_music_visual' },
  { title: '字體設計｜音樂視覺', date: '2025-04-02', image: 'images/works_10_a.svg', link: '04_typography_music_visual' },
  { title: '字體設計｜音樂視覺', date: '2025-04-09', image: 'images/works_11_a.svg', link: '05_typography_music_visual' },
  { title: '字體設計｜音樂視覺', date: '2025-04-16', image: 'images/works_12_a.svg', link: '06_typography_music_visual' },
];

// 持續更新中清單
const comingSoonList = [
  { title: 'Coming Soon', date: '____-__-__' },
  { title: 'Coming Soon', date: '____-__-__' },
  { title: 'Coming Soon', date: '____-__-__' },
  { title: 'Coming Soon', date: '____-__-__' },
  { title: 'Coming Soon', date: '____-__-__' },
  { title: 'Coming Soon', date: '____-__-__' },
];

// 定義顏色陣列
const colors = ['#e5af3a33', '#24364033', '#d3d7d933', '#24364033', '#d3d7d933', '#e5af3a33', '#d3d7d933', '#e5af3a33', '#24364033'];
---

<BaseLayout title="作品" mainClass="works-main">
  <Navbar slot="navbar" />

  <!-- 篩選按鈕（可水平滑動） -->
  <div class="filter-buttons-container">
    <div class="filter-buttons">
      <button data-filter="all" class="active">全部</button>
      <button data-filter="字體設計｜主題設計">字體設計｜主題設計</button>
      <button data-filter="字體設計｜音樂視覺">字體設計｜音樂視覺</button>
      <button data-filter="Coming Soon">Coming Soon</button>
      <div class="indicator"></div>
    </div>
  </div>

  <!-- 卡片區域 -->
  <main class="works-grid" id="works-grid">
    {worksList.map((work) => {
      const imgSrc = work.image.startsWith(base)
        ? work.image
        : `${base}${work.image.replace(/^\//, '')}`;

      return (
        <a href={`${base}${work.link.replace(/^\//, '')}`} class="fade-in" data-category={work.title}>
          <WorksCard
            title={work.title}
            date={work.date}
            image={imgSrc}
          />
        </a>
      );
    })}

    {comingSoonList.map((work, index) => {
      const color = colors[index % colors.length];
      // 統一使用 viewBox + preserveAspectRatio，確保填滿卡片
      const imgSrc = 'data:image/svg+xml;base64,' + btoa(
        `<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 400 400" preserveAspectRatio="xMidYMid slice">
          <rect width="400" height="400" fill="${color}"/>
        </svg>`
      );

      return (
        <a class="fade-in" data-category="Coming Soon">
          <WorksCard
            title={work.title}
            date={work.date}
            image={imgSrc}
          />
        </a>
      );
    })}


  </main>
  <BackToTop />
  <Footer slot="footer" />

  <script>
    document.addEventListener('DOMContentLoaded', () => {
      const buttons = document.querySelectorAll<HTMLButtonElement>('.filter-buttons button');
      const worksGrid = document.getElementById('works-grid')!;
      const indicator = document.querySelector<HTMLDivElement>('.indicator')!;
      const container = document.querySelector<HTMLDivElement>('.filter-buttons-container')!;

      buttons.forEach((btn) => {
        btn.addEventListener('click', () => {
          // 切換 active 樣式
          buttons.forEach((b) => b.classList.remove('active'));
          btn.classList.add('active');

          // 移動 indicator
          indicator.style.left = btn.offsetLeft + 'px';
          indicator.style.width = btn.offsetWidth + 'px';

          // 保持點擊按鈕在可視範圍
          const btnLeft = btn.offsetLeft;
          const btnRight = btnLeft + btn.offsetWidth;
          const containerScrollLeft = container.scrollLeft;
          const containerWidth = container.offsetWidth;

          if (btnLeft < containerScrollLeft) {
            container.scrollTo({ left: btnLeft, behavior: 'smooth' });
          } else if (btnRight > containerScrollLeft + containerWidth) {
            container.scrollTo({ left: btnRight - containerWidth, behavior: 'smooth' });
          }

          // 篩選卡片
          const filter = btn.dataset.filter!;
          const items = worksGrid.querySelectorAll<HTMLAnchorElement>('a');

          items.forEach((item) => {
            if (filter === 'all' || item.dataset.category === filter) {
              item.classList.remove('fade-out');
              item.classList.add('fade-in');
              item.style.display = 'block';
            } else {
              item.classList.remove('fade-in');
              item.classList.add('fade-out');
              setTimeout(() => { item.style.display = 'none'; }, 300);
            }
          });
        });
      });

      // 初始化 indicator
      const activeBtn = document.querySelector<HTMLButtonElement>('.filter-buttons button.active')!;
      indicator.style.left = activeBtn.offsetLeft + 'px';
      indicator.style.width = activeBtn.offsetWidth + 'px';

      window.addEventListener('resize', () => {
        const activeBtn = document.querySelector<HTMLButtonElement>('.filter-buttons button.active')!;
        indicator.style.left = activeBtn.offsetLeft + 'px';
        indicator.style.width = activeBtn.offsetWidth + 'px';
      });
    });
  </script>

<style>
  main.works-grid {
    flex: 1;
  }

  /* 可水平滑動容器 */
  .filter-buttons-container {
    max-width: 90%;
    overflow-x: auto;
    -webkit-overflow-scrolling: touch;
    margin: 56px auto 20px;
    display: flex;              /* ✅ 新增 */
    justify-content: center;    /* ✅ 容器層級置中 */
  }

  .filter-buttons {
    display: flex;
    gap: 12px;
    position: relative;
    width: max-content;         /* ✅ 保留捲動特性 */
  }

  .filter-buttons button {
    background: none;
    border: none;
    padding: 8px 16px;
    cursor: pointer;
    font-size: var(--font-lg);   /* ✅ 用 tokens.css */
    color: #243640;
    transition: color 0.3s;
    white-space: nowrap;
    letter-spacing: 0.05rem; /* ✅ 段落文字間距 */
  }

  .filter-buttons button.active {
    color: #d3d7d9;
    font-weight: bold;
  }

  .indicator {
    position: absolute;
    bottom: 0;
    height: 2px;
    background: #E5AF3A;
    transition: all 0.3s ease;
  }

  /* 作品集 */
  .works-grid {
    max-width: 90%;
    margin: 0 auto;
    padding: 40px 0px 80px;
    display: grid;
    gap: 48px;
    grid-template-columns: repeat(3, 1fr);
    justify-items: center;
    grid-auto-rows: 1fr;
    justify-content: center;
  }

  .works-grid a {
    display: flex;
    flex-direction: column;
    width: 100%;
    height: 100%;
    text-decoration: none;
    color: inherit;
    opacity: 1;
    transition: opacity 0.3s ease, transform 0.3s ease;
    font-size: var(--font-sm);   /* ✅ 卡片內文字用 tokens.css */
  }

  .works-grid a .card {
    width: 100%;
    aspect-ratio: 1/1;
    overflow: hidden;
  }

  .fade-in {
    animation: fadeIn 0.3s forwards;
  }

  .fade-out {
    animation: fadeOut 0.3s forwards;
  }

  .works-grid a img {
    width: 100%;
    height: 100%;
    object-fit: cover;
  }

  @keyframes fadeIn {
    from { opacity: 0; transform: translateY(10px); }
    to { opacity: 1; transform: translateY(0); }
  }

  @keyframes fadeOut {
    from { opacity: 1; transform: translateY(0); }
    to { opacity: 0; transform: translateY(10px); }
  }

  /* 平板 */
  @media (max-width: 1024px) {
    .works-grid {
      grid-template-columns: repeat(2, 1fr);
      grid-auto-rows: 1fr;
      padding-bottom: 120px;
    }
  }

  /* 手機 */
  @media (max-width: 480px) {
    main.works-grid {
      min-height: calc(100vh - 60px);
      overflow-y: auto;
      -webkit-overflow-scrolling: touch;
      padding: 0;
      background-color: transparent;
    }
    main.works-grid::-webkit-scrollbar { display: none; }

    .works-grid {
      grid-template-columns: 1fr;
      grid-auto-rows: 1fr;
      max-width: 100%;
      margin: 0 auto;
      padding-bottom: 120px;
      padding: 24px 12px 120px; /* 上下左右多一點 padding */
      gap: 24px; /* 卡片之間留更多間距 */
    }
    
    .filter-buttons-container {
      max-width: 100%;
      width: 100%;
      overflow-x: auto;                /* ✅ 可以滑動 */
      -webkit-overflow-scrolling: touch;
      margin: 0 auto 16px;
      padding: 0 8px;
      display: flex;                   /* ✅ 水平置中 */
      justify-content: flex-start;     /* ✅ 從左開始排，方便滑動 */
    }
    .filter-buttons {
      display: flex;
      gap: 12px;
      position: relative;
      width: max-content;              /* ✅ 讓內容寬度自適應，超出時可滑 */
      margin: 0;
    }

    .filter-buttons button {
      font-size: var(--font-md);       /* ✅ 手機字體小一點 */
      padding: 6px 12px;               /* ✅ 內距縮小 */
    }
    
  }
</style>

</BaseLayout>
